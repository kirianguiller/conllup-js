!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.conllup=n():t.conllup=n()}(self,(function(){return(()=>{"use strict";var t={989:(t,n,e)=>{e.d(n,{default:()=>y});const o={0:{label:"ID",type:"str"},1:{label:"FORM",type:"str"},2:{label:"LEMMA",type:"str"},3:{label:"UPOS",type:"str"},4:{label:"XPOS",type:"str"},5:{label:"FEATS",type:"dict"},6:{label:"HEAD",type:"int"},7:{label:"DEPREL",type:"str"},8:{label:"DEPS",type:"dict"},9:{label:"MISC",type:"dict"}},s=(t,n)=>["FORM","LEMMA"].includes(n.label)?t:["-","â€“"].includes(t)?"_":t,r=(t,n)=>{if("str"===n)return t;if("int"===n)return"_"===t?-1:parseInt(t,10);if("dict"===n)return(t=>{const n={};if("_"===t)return n;const e=t.split("|");for(const t of e){const e=t.split("="),o=e[0],s=e.slice(1).join("=");n[o]=s}return n})(t);throw new Error(`${n} is not a correct type`)},c=t=>{const n=t.trim().split("\t");if(10!==n.length)throw new Error(`CONLL PARSING ERROR : line "${t}" is not valid, ${n.length} columns found instead of 10`);const e={ID:"_",FORM:"_",LEMMA:"_",UPOS:"_",XPOS:"_",FEATS:{},HEAD:-1,DEPREL:"_",DEPS:{},MISC:{}};for(const t in o)if(o.hasOwnProperty(t)){const c=o[t],i=s(n[t],c),l=c.label,p=c.type;e[l]=r(i,p)}return e},i=(t,n)=>{if("str"===n)return t;if("int"===n)return-1===t?"_":t.toString();if("dict"===n)return(t=>{const n=[];for(const e in t){if(!t.hasOwnProperty(e))throw Error(`featureJson don't possess the key '${e}'`);{const o=t[e];n.push(`${e}=${o}`)}}let e=n.join("|");return""===e&&(e="_"),e})(t);throw new Error(`${n} is not a correct type`)},l=t=>{const n=[];for(const e in o)if(o.hasOwnProperty(e)){const s=o[e],r=s.label,c=s.type,l=t[r],p=i(l,c);n.push(p)}return n.join("\t")},p=(t,n)=>{const e=parseInt(t.split("-")[0],10),o=parseInt(n.split("-")[0],10);return e-o!=0?e-o:n.length-t.length},f=t=>t.ID.indexOf("-")>-1,a=(t,n,e,o)=>{if(f(t)){const[s,r]=t.ID.split("-"),c=u(parseInt(s,10),n,e,o),i=u(parseInt(r,10),n,e,o);if(-1!==c&&-1!==i){const n=`${c}-${i}`;t.ID=n}else t.ID="-1"}else{const s=t.ID,r=u(parseInt(s,10),n,e,o);t.ID=r.toString()}const s=t.HEAD;if(-1!==s){const r=u(s,n,e,o);t.HEAD=r}return t},u=(t,n,e,o)=>t<n?t:t>e?t+o:-1,d=[["\\s","s"],["\\\\t","\t"],["\\\\n","\n"],["\\\\v","\v"],["\\\\f","\f"],["\\\\r","\r"]],y={sentenceConllToJson:t=>{const n={metaJson:{},nodesJson:{},groupsJson:{}},{metaLines:e,treeLines:o}=(t=>{const n=t.trim().split("\n"),e=[],o=[];for(const t of n){const n=t.trim();n.startsWith("#")?e.push(n):(s=n.slice(0,1),/^\d+$/.test(s)?o.push(n):console.log(`Warning: line didnt't start with a digit or '#' : "${n}" `))}var s;return{metaLines:e,treeLines:o}})(t);n.metaJson=(t=>{const n={};for(const e of t){const[t,o]=e.split(" = ");n[t.slice(2)]=o}return n})(e);const{nodesJson:s,groupsJson:r}=(t=>{const n={},e={};for(const o of t){const t=c(o);!0===f(t)?e[t.ID]=t:n[t.ID]=t}return{nodesJson:n,groupsJson:e}})(o);return n.nodesJson=s,n.groupsJson=r,n},sentenceJsonToConll:t=>{let n=(t=>{const n=[];for(const e in t){if(!t.hasOwnProperty(e))throw Error(`metaJson don't possess the key '${e}'`);{const o=`# ${e} = ${t[e]}`;n.push(o)}}return n.join("\n")})(t.metaJson);const e=((t,n)=>{const e=[],o={...t,...n},s=(t=>t.sort(p))(Object.values(o).map((t=>t.ID)));for(const t of s){const n=o[t],s=l(n);e.push(s)}return e.join("\n")})(t.nodesJson,t.groupsJson);return""===n?e:`${n}\n${e}`},emptySentenceJson:()=>({metaJson:{},nodesJson:{},groupsJson:{}}),emptyMetaJson:()=>({}),emptyTreeJson:()=>({}),emptyTokenJson:()=>({ID:"_",FORM:"_",LEMMA:"_",UPOS:"_",XPOS:"_",FEATS:{},HEAD:-1,DEPREL:"_",DEPS:{},MISC:{}}),emptyFeatureJson:()=>({}),replaceArrayOfTokens:(t,n,e,o)=>{const s={},r={};let c=e[0];for(const t of o){const n={ID:"_",FORM:"_",LEMMA:"_",UPOS:"_",XPOS:"_",FEATS:{},HEAD:-1,DEPREL:"_",DEPS:{},MISC:{}};n.ID=c.toString(),n.FORM=t,s[n.ID]=n,c++}const i=o.length-e.length,l=e[0],p=e[e.length-1];for(const e of Object.values({...t,...n})){const t=JSON.parse(JSON.stringify(e)),n=a(t,l,p,i);"-1"!==n.ID&&(!0===f(n)?r[n.ID]=n:s[n.ID]=n)}return{newNodesJson:s,newGroupsJson:r}},constructTextFromSentenceJson:t=>{let n="";for(const e in t.nodesJson)if(t.nodesJson[e]&&!1===f(t.nodesJson[e])){const o=t.nodesJson[e],s=o.FORM,r="No"===o.MISC.SpaceAfter?"":" ";if(o.MISC.SpacesAfter){let t=o.MISC.SpacesAfter;for(const[n,e]of d)t=t.replaceAll(n,e);n=n+s+t;continue}n=n+s+r}return n}}}},n={};function e(o){if(n[o])return n[o].exports;var s=n[o]={exports:{}};return t[o](s,s.exports,e),s.exports}return e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e(989)})().default}));
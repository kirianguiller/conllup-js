!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.conllup=e():t.conllup=e()}(self,(function(){return(()=>{"use strict";var t={989:(t,e,n)=>{n.d(e,{default:()=>d});const o={0:{label:"ID",type:"str"},1:{label:"FORM",type:"str"},2:{label:"LEMMA",type:"str"},3:{label:"UPOS",type:"str"},4:{label:"XPOS",type:"str"},5:{label:"FEATS",type:"dict"},6:{label:"HEAD",type:"int"},7:{label:"DEPREL",type:"str"},8:{label:"DEPS",type:"dict"},9:{label:"MISC",type:"dict"}},s=(t,e)=>["FORM","LEMMA"].includes(e.label)?t:["-","â€“"].includes(t)?"_":t,r=(t,e)=>{if("str"===e)return t;if("int"===e)return"_"===t?-1:parseInt(t,10);if("dict"===e)return(t=>{const e={};if("_"===t)return e;const n=t.split("|");for(const t of n){const n=t.split("="),o=n[0],s=n.slice(1).join("=");e[o]=s}return e})(t);throw new Error(`${e} is not a correct type`)},c=t=>{const e=t.trim().split("\t");if(10!==e.length)throw new Error(`CONLL PARSING ERROR : line "${t}" is not valid, ${e.length} columns found instead of 10`);const n={ID:"_",FORM:"_",LEMMA:"_",UPOS:"_",XPOS:"_",FEATS:{},HEAD:-1,DEPREL:"_",DEPS:{},MISC:{}};for(const t in o)if(o.hasOwnProperty(t)){const c=o[t],i=s(e[t],c),l=c.label,p=c.type;n[l]=r(i,p)}return n},i=(t,e)=>{if("str"===e)return t;if("int"===e)return-1===t?"_":t.toString();if("dict"===e)return(t=>{const e=[];for(const n in t){if(!t.hasOwnProperty(n))throw Error(`featureJson don't possess the key '${n}'`);{const o=t[n];e.push(`${n}=${o}`)}}let n=e.join("|");return""===n&&(n="_"),n})(t);throw new Error(`${e} is not a correct type`)},l=t=>{const e=[];for(const n in o)if(o.hasOwnProperty(n)){const s=o[n],r=s.label,c=s.type,l=t[r],p=i(l,c);e.push(p)}return e.join("\t")},p=(t,e)=>{const n=parseInt(t.split("-")[0],10),o=parseInt(e.split("-")[0],10);return n-o!=0?n-o:e.length-t.length},f=t=>t.ID.indexOf("-")>-1,u=(t,e,n,o)=>{if(f(t)){const[s,r]=t.ID.split("-"),c=a(parseInt(s,10),e,n,o),i=a(parseInt(r,10),e,n,o);if(-1!==c&&-1!==i){const e=`${c}-${i}`;t.ID=e}else t.ID="-1"}else{const s=t.ID,r=a(parseInt(s,10),e,n,o);t.ID=r.toString()}const s=t.HEAD;if(-1!==s){const r=a(s,e,n,o);t.HEAD=r}return t},a=(t,e,n,o)=>t<e?t:t>n?t+o:-1,J=[["\\s","s"],["\\\\t","\t"],["\\\\n","\n"],["\\\\v","\v"],["\\\\f","\f"],["\\\\r","\r"]],d={sentenceConllToJson:t=>{const e={metaJson:{},treeJson:{nodesJson:{},groupsJson:{}}},{metaLines:n,treeLines:o}=(t=>{const e=t.trim().split("\n"),n=[],o=[];for(const t of e){const e=t.trim();e.startsWith("#")?n.push(e):(s=e.slice(0,1),/^\d+$/.test(s)?o.push(e):console.log(`Warning: line didnt't start with a digit or '#' : "${e}" `))}var s;return{metaLines:n,treeLines:o}})(t);return e.metaJson=(t=>{const e={};for(const n of t){const[t,o]=n.split(" = ");e[t.slice(2)]=o}return e})(n),e.treeJson=(t=>{const e={nodesJson:{},groupsJson:{}};for(const n of t){const t=c(n);!0===f(t)?e.groupsJson[t.ID]=t:e.nodesJson[t.ID]=t}return e})(o),e},sentenceJsonToConll:t=>{let e=(t=>{const e=[];for(const n in t){if(!t.hasOwnProperty(n))throw Error(`metaJson don't possess the key '${n}'`);{const o=`# ${n} = ${t[n]}`;e.push(o)}}return e.join("\n")})(t.metaJson);const n=(t=>{const e=[],n={...t.nodesJson,...t.groupsJson},o=(t=>t.sort(p))(Object.values(n).map((t=>t.ID)));for(const t of o){const o=n[t],s=l(o);e.push(s)}return e.join("\n")})(t.treeJson);return""===e?n:`${e}\n${n}`},emptySentenceJson:()=>({metaJson:{},treeJson:{nodesJson:{},groupsJson:{}}}),emptyMetaJson:()=>({}),emptyTreeJson:()=>({nodesJson:{},groupsJson:{}}),emptyTokenJson:()=>({ID:"_",FORM:"_",LEMMA:"_",UPOS:"_",XPOS:"_",FEATS:{},HEAD:-1,DEPREL:"_",DEPS:{},MISC:{}}),emptyFeatureJson:()=>({}),replaceArrayOfTokens:(t,e,n)=>{const o={},s={};let r=e[0];for(const t of n){const e={ID:"_",FORM:"_",LEMMA:"_",UPOS:"_",XPOS:"_",FEATS:{},HEAD:-1,DEPREL:"_",DEPS:{},MISC:{}};e.ID=r.toString(),e.FORM=t,o[e.ID]=e,r++}const c=n.length-e.length,i=e[0],l=e[e.length-1];for(const e of Object.values({...t.nodesJson,...t.groupsJson})){const t=JSON.parse(JSON.stringify(e)),n=u(t,i,l,c);"-1"!==n.ID&&(!0===f(n)?s[n.ID]=n:o[n.ID]=n)}return{nodesJson:o,groupsJson:s}},constructTextFromSentenceJson:t=>{let e="";for(const n in t.treeJson.nodesJson)if(t.treeJson.nodesJson[n]&&!1===f(t.treeJson.nodesJson[n])){const o=t.treeJson.nodesJson[n],s=o.FORM,r="No"===o.MISC.SpaceAfter?"":" ";if(o.MISC.SpacesAfter){let t=o.MISC.SpacesAfter;for(const[e,n]of J)t=t.replaceAll(e,n);e=e+s+t;continue}e=e+s+r}return e}}}},e={};function n(o){if(e[o])return e[o].exports;var s=e[o]={exports:{}};return t[o](s,s.exports,n),s.exports}return n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n(989)})().default}));